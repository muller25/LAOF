#include "MakeBrushMap.h"

/*static int bSize_1[3][3] = {
  0,255,0,
  255,255,255,
  0,255,0
  };*/
/*static int bSize_1[3][3] = {
  0,255,0,
  230,230,230,
  0,255,0
  };*/
static int bSize_1[3][3] = {
    {0,43,0},
    {32,77,45},
    {0,55,0}
};
/*static int bSize_2[5][5]={ 0,  0,   255, 0,   0,
  0,  180, 255, 180, 0,
  255,200, 255, 200, 255,
  0,  180, 255, 180, 0,
  0,  0,   255, 0,   0,
  };*/
/*static int bSize_2[5][5]={
  0,0,255,255,0,
  0,230,230,230,0,
  250,250,250,250,250,
  0,230,230,230,0,
  0,0,255,255,0
  };*/
static int bSize_2[5][5] = {
    {0,3,22,37,14},
    {27,43,32,41,26},
    {32,77,38,64,47},
    {43,70,64,78,44},
    {0,23,54,61,12}
};
/*static int bSize_4[9][9] = {0, 0,  0,  0,  255,0,  0,  0, 0,
  0, 0,  0,  180,255,180,0,  0, 0,
  0, 0,  200, 255,200,255, 200, 0, 0,
  0, 180,255,180,255,180,255,180,0,
  255,200,255,200,255,200,255,200,255,
  0, 180,255,180,255,180,255,180,0,
  0, 0,  200, 255,200,255, 200, 0, 0,
  0, 0,  0,  180,255,180,0,  0, 0,
  0, 0,  0,  0,  255,0,  0,  0, 0
  };*/
/*static int bSize_4[9][9] = {
  0,0,0,250,250,250,0,0,0,
  0,0,220,220,220,220,220,0,0,
  0,255,255,255,255,255,255,255,0,
  230,230,230,230,230,230,230,230,230,
  250,250,250,250,250,250,250,250,250,
  230,230,230,230,230,230,230,230,230,
  0,255,255,255,255,255,255,255,0,
  0,0,220,220,220,220,220,0,0,
  0,0,0,250,250,250,0,0,0
  };*/
static int bSize_4[9][9] = {
    {0,0,0,3,22,37,14,0,0},
    {0,0,3,50,40,21,55,5,0},
    {0,62,27,83,76,33,56,77,31},
    {43,70,64,78,77,44,38,15,40},
    {27,43,32,53,41,37,104,36,47},
    {32,77,38,64,86,68,15,11,49},
    {0,52,63,63,43,34,66,29,0},
    {0,0,24,79,73,20,39,45,5},
    {0,0,0,23,54,61,43,0,0}
};
/*static int bSize_8[17][17]= {
  0, 0,  0,  0,  0,  0,  0,  0, 255,0,  0,  0,  0,  0,  0,  0,0,
  0, 0,  0,  0,  0,  0, 0, 200,255,200, 0, 0,  0,  0,  0,  0,0,
  0, 0,  0,  0,  0, 0, 180, 255,180,255, 180, 0, 0,  0,  0,  0,0,
  0, 0,  0,  0, 0, 200, 255,200,255,200,255, 200, 0, 0,  0,  0,0,
  0, 0,  0, 0, 180, 255, 180,255,180,255,180,255, 180, 0, 0,  0,0,
  0,0, 0, 200, 255, 200,255,200,255,200,255,200, 255, 200, 0, 0,0,
  0,0, 180, 255,180,255,180,255,180,255,180,255,180,255, 180, 0,0,
  0,200,255,200,255,200,255,200,255,200,255,200,255,200,255,200,0,
  180,255, 180, 255,180,255,180,255,180,255,180,255,180,255, 180, 255,180,
  0,200,255,200,255,200,255,200,255,200,255,200,255,200,255,200,0,
  0,0, 180, 255,180,255,180,255,180,255,180,255,180,255, 180, 0,0,
  0,0, 0, 200, 255, 200,255,200,255,200,255,200, 255, 200, 0, 0,0,
  0, 0,  0, 0, 180, 255, 180,255,180,255,180,255, 180, 0, 0,  0,0,
  0, 0,  0,  0, 0, 200, 255,200,255,200,255, 200, 0, 0,  0,  0,0,
  0, 0,  0,  0,  0, 0, 180, 255,180,255, 180, 0, 0,  0,  0,  0,0,
  0, 0,  0,  0,  0,  0, 0, 200,255,200, 0, 0,  0,  0,  0,  0,0,
  0, 0,  0,  0,  0,  0,  0,  0, 255,0,  0,  0,  0,  0,  0,  0,0
  };*/

/*static int bSize_8[17][17] = {
  0,0,0,0,0,250,250,250,250,250,250,250,0,0,0,0,0,
  0,0,0,0,220,220,220,220,220,220,220,220,220,0,0,0,0,
  0,0,0,255,255,255,255,255,255,255,255,255,255,255,0,0,0,
  0,0,0,230,230,230,230,230,230,230,230,230,230,230,0,0,0,
  0,0,240,240,240,240,240,240,240,240,240,240,240,240,240,0,0,
  0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
  240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,
  240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,
  0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,
  0,0,240,240,240,240,240,240,240,240,240,240,240,240,240,0,0,
  0,0,0,230,230,230,230,230,230,230,230,230,230,230,0,0,0,
  0,0,0,255,255,255,255,255,255,255,255,255,255,255,0,0,0,
  0,0,0,0,220,220,220,220,220,220,220,220,220,0,0,0,0,
  0,0,0,0,0,250,250,250,250,250,250,250,0,0,0,0,0
  };*/
static int bSize_8[17][17] = {
    {0,0,0,0,3,22,56,37,34,33,14,0,0,0,0,0,0},
    {0,0,0,13,52,68,80,85,61,84,73,47,11,0,0,0,0},
    {0,3,50,56,40,21,55,83,94,89,31,55,140,64,55,5,0},
    {0,39,60,41,47,15,32,39,31,42,34,11,29,37,21,55,4},
    {1,18,63,18,34,38,10,31,60,35,44,111,81,55,111,69,11},
    {0,62,27,83,76,33,33,36,27,56,105,58,73,86,133,77,31},
    {43,70,64,78,77,44,38,15,40,57,35,21,51,80,126,53,37},
    {69,79,27,45,48,35,30,32,92,79,44,54,50,68,47,23,47},
    {28,100,54,27,58,96,75,50,34,10,4,41,35,50,89,50,35},
    {27,43,32,53,41,37,104,36,47,38,116,124,59,61,70,40,29},
    {32,77,38,64,86,68,15,11,49,50,57,83,50,23,114,50,45},
    {8,58,79,100,9,30,6,1,45,77,44,68,81,21,83,71,23},
    {0,52,63,63,43,34,13,49,30,33,66,61,24,34,78,64,1},
    {0,11,59,107,24,44,67,49,31,40,25,30,48,115,65,15,0},
    {0,0,24,79,73,20,46,96,50,24,104,89,30,39,45,5,0},
    {0,0,0,0,13,56,96,110,81,75,60,33,6,0,0,0,0},
    {0,0,0,0,0,0,23,65,54,61,43,13,0,0,0,0,0}
};
/*static int bSize_21[21][21] = {
  0,0,0,0,0,0,20,40,60,30,30,30,30,10,0,0,0,0,0,0,0,
  0,0,0,0,10,40,50,60,70,70,40,40,70,60,40,20,0,0,0,0,0,
  0,0,0,0,50,50,60,80,30,30,50,20,60,60,50,50,30,0,0,0,0,
  0,0,0,50,50,30,10,30,80,50,60,80,60,10,40,120,50,50,10,0,0,
  0,0,40,60,40,50,0,20,30,20,30,40,20,0,20,30,20,60,80,0,0,
  0,10,50,40,10,30,50,30,0,30,50,50,30,40,100,60,50,50,100,60,0,
  0,50,50,30,50,50,30,30,30,30,40,40,20,40,80,40,50,60,70,60,20,
  40,50,50,50,60,60,70,30,30,20,0,30,40,40,30,0,30,60,80,40,30,
  50,50,50,20,30,30,30,20,20,20,20,80,60,30,30,30,70,50,30,20,30,
  40,50,30,0,30,30,30,50,20,30,30,30,20,30,80,40,40,40,20,0,30,
  40,10,70,50,0,20,40,70,40,30,20,10,0,30,40,30,40,60,40,30,40,
  40,40,80,60,0,30,60,70,60,40,20,20,70,40,20,40,40,40,20,70,50,
  20,40,20,20,40,20,20,80,20,40,40,20,80,80,40,40,20,40,20,60,20,
  30,60,30,50,60,50,0,50,0,10,40,40,40,60,50,40,10,80,40,60,40,
  0,50,60,20,60,80,10,30,10,0,40,60,40,50,80,60,10,60,70,60,20,
  0,0,60,60,60,60,40,30,10,40,60,40,20,20,50,40,20,30,70,60,0,
  0,0,10,60,80,20,40,60,70,40,20,30,20,0,20,40,90,80,60,30,0,
  0,0,0,10,50,50,10,30,70,40,20,80,70,30,30,40,60,40,0,0,0,
  0,0,0,0,10,50,50,30,30,50,40,40,40,40,40,40,10,0,0,0,0,
  0,0,0,0,0,10,40,40,60,80,50,50,40,40,20,0,0,0,0,0,0,
  0,0,0,0,0,0,0,10,50,40,30,40,20,40,0,0,0,0,0,0,0

  };*/
static int bSize_21[21][21] = {
    {0,0,0,0,0,3,22,40,56,37,34,33,32,14,0,0,0,0,0,0,0},
    {0,0,0,0,13,52,68,80,87,85,61,63,84,73,47,11,0,0,0,0,0},
    {0,0,0,1,60,65,69,89,45,49,69,36,81,78,69,75,46,4,0,0,0},
    {0,0,3,50,56,40,21,55,83,74,81,94,89,31,55,140,64,55,5,0,0},
    {0,0,39,60,41,47,15,32,39,31,42,49,34,11,29,37,21,55,76,4,0},
    {1,18,63,53,18,34,59,38,10,31,60,62,35,44,111,81,55,66,111,69,11},
    {0,62,72,27,83,76,33,39,33,36,54,57,27,56,105,58,73,86,133,77,31},
    {43,70,64,59,78,77,91,44,38,28,15,40,54,57,35,21,51,80,126,53,37},
    {69,81,79,27,45,45,48,35,31,30,32,92,79,44,54,50,86,68,47,23,47},
    {54,81,37,9,38,46,56,74,39,48,57,61,23,38,94,57,72,76,32,10,48},
    {46,28,100,54,7,27,58,96,75,50,34,10,4,41,68,35,50,89,50,35,60},
    {45,40,99,71,9,36,78,97,85,59,25,30,89,73,37,60,56,63,36,99,80},
    {27,43,29,32,53,41,37,104,36,49,47,38,116,124,59,61,44,70,40,102,29},
    {32,77,38,64,86,68,15,54,7,11,49,50,57,94,83,50,23,114,50,87,45},
    {8,58,71,39,79,100,9,30,6,1,45,77,44,68,113,81,21,83,87,71,23},
    {0,0,52,63,71,63,43,34,13,49,67,49,30,33,66,61,24,34,78,64,1},
    {0,0,11,59,107,24,44,67,83,49,31,40,25,0,30,48,115,106,65,15,0},
    {0,0,0,24,79,73,20,46,96,50,24,104,89,29,30,39,66,45,5,0,0},
    {0,0,0,0,25,65,64,47,46,72,62,58,53,52,53,53,23,0,0,0,0},
    {0,0,0,0,0,13,50,56,96,110,81,75,60,57,33,6,0,0,0,0,0},
    {0,0,0,0,0,0,0,23,72,65,54,61,31,43,13,0,0,0,0,0,0}
};

/*static int bSize_16[33][33] ={
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,  0, 255,0,  0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,  200, 255,200,  0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,180,  255, 180,255,  180,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,200,255,  200, 255,200,  255,  200,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,180,255,180,  255, 180,255,  180,  255,  180,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,180,255,180,255,180,  255, 180,255,  180,  255,  180,  255,  180,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,180,255,180,255,180,255,180,  255, 180,255,  180,  255,  180,  255,  180,  255,180,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,200,255,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,255,200,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  180,255,180,255,180,255,180,255,180,  255, 180,255,  180,  255,  180,  255,  180,  255,180,255,180,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  200,  255,200,255,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,255,200,255,200,0,0,0,0,0,
  0, 0,  0,  0,  180, 255,  180,  255,  180,  255,  180,  255,180,255,180,255, 180,255,  180,  255,  180,  255,  180,  255,180,255,180,255,180,0,0,0,0,
  0, 0,  0,  200,255,  200,  255,200,255,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,255,200,255,200,255,200,0,0,0,
  0, 0,  180,255,  180, 255,  180,  255,  180,  255,  180,  255,180,255,180,255, 180,255,  180,  255,  180,  255,  180,  255,180,255,180,255,180,255,180,0,0,
  0,200,255, 200,  255,  200,  255,200,255,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,255,200,255,200,255,200,255,200,0,
  180,255,180,255,  180, 255,  180,  255,  180,  255,  180,  255,180,255,180,255, 180,255,  180,  255,  180,  255,  180,  255,180,255,180,255,180,255,180,255,180,
  0,200,255, 200,  255,  200,  255,200,255,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,255,200,255,200,255,200,255,200,0,
  0, 0,  180,255,  180, 255,  180,  255,  180,  255,  180,  255,180,255,180,255, 180,255,  180,  255,  180,  255,  180,  255,180,255,180,255,180,255,180,0,0,
  0, 0,  0,  200,255,  200,  255,200,255,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,255,200,255,200,255,200,0,0,0,
  0, 0,  0,  0,  180, 255,  180,  255,  180,  255,  180,  255,180,255,180,255, 180,255,  180,  255,  180,  255,  180,  255,180,255,180,255,180,0,0,0,0,
  0, 0,  0,  0,  0,  200,  255,200,255,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,255,200,255,200,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  180,255,180,255,180,255,180,255,180,  255, 180,255,  180,  255,  180,  255,  180,  255,180,255,180,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,200,255,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,255,200,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,180,255,180,255,180,255,180,  255, 180,255,  180,  255,  180,  255,  180,  255,180,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,200,255,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  255,  200,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,180,255,180,255,180,  255, 180,255,  180,  255,  180,  255,  180,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,200,255,200,255,  200, 255,200,  255,  200,  255,  200,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,180,255,180,  255, 180,255,  180,  255,  180,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,200,255,  200, 255,200,  255,  200,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,180,  255, 180,255,  180,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,  200, 255,200,  0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0,
  0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,  0, 255,0,  0,  0,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0
  };*/
static int bSize_16[33][33] = {
    {0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,255,255, 255, 255,255,  255, 255,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,220,220,220,  220, 220,220,  220,  220,  220,  0,  0,  0,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,0,0,250,250,250,250,  250, 250,250,  250,  250,  250,  250,  0,  0,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,0,240,240,240,240,240,  240, 240,240,  240,  240,  240,  240,  240,  0,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,220,220,220,220,220,220,  220, 220,220,  220,  220,  220,  220,  220,  220,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,250,250,250,250,250,250,250,  250, 250,250,  250,  250,  250,  250,  250,  250,250,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,230,230,230,230,230,230,230,230,  230, 230,230,  230,  230,  230,  230,  230,  230,230,230,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  240,240,240,240,240,240,240,240,240,  240, 240,240,  240,  240,  240,  240,  240,  240,240,240,240,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  255,  255,255,255,255,255,255,255,255,255,  255, 255,255,  255,  255,  255,  255,  255,  255,255,255,255,255,0,0,0,0,0},
    {0, 0,  0,  0,  230,  230,  230,230,230,230,230,230,230,230,230,  230, 230,230,  230,  230,  230,  230,  230,  230,230,230,230,230,230,0,0,0,0},
    {0, 0,  0,  240,  240,  240,  240,240,240,240,240,240,240,240,240,  240, 240,240,  240,  240,  240,  240,  240,  240,240,240,240,240,240,240,0,0,0},
    {0, 0,  255,  255,  255,  255,  255,255,255,255,255,255,255,255,255,  255, 255,255,  255,  255,  255,  255,  255,  255,255,255,255,255,255,255,255,0,0},
    {0, 230,  230,  230,  230, 230,  230,  230,  230,  230,  230,  230,230,230,230,230, 230,230,  230,  230,  230,  230,  230,  230,230,230,230,230,230,230,230,230,0},
    {250, 250,  250,  250,250,  250,  250,250,250,250,250,250,250,250,250,  250, 250,250,  250,  250,  250,  250,  250,  250,250,250,250,250,250,250,250,250,250},
    {220, 220,  220,220,  220, 220,  220,  220,  220,  220,  220,  220,220,220,220,220, 220,220,  220,  220,  220,  220,  220,  220,220,220,220,220,220,220,220,220,220},
    {240,240,240, 240,  240,  240,  240,240,240,240,240,240,240,240,240,  240, 240,240,  240,  240,  240,  240,  240,  240,240,240,240,240,240,240,240,240,240},
    {255,255,255,255,  255, 255,  255,  255,  255,  255,  255 ,255,255,255,255,255, 255,255,  255,  255,  255,  255,  255,  255,255,255,255,255,255,255,255,255,255},
    {240,240,240, 240,  240,  240,  240,240,240,240,240,240,240,240,240,  240, 240,240,  240,  240,  240,  240,  240,  240,240,240,240,240,240,240,240,240,240},
    {220, 220,  220,220,  220, 220,  220,  220,  220,  220,  220,  220,220,220,220,220, 220,220,  220,  220,  220,  220,  220,  220,220,220,220,220,220,220,220,220,220},
    {250, 250,  250,  250,250,  250,  250,250,250,250,250,250,250,250,250,  250, 250,250,  250,  250,  250,  250,  250,  250,250,250,250,250,250,250,250,250,250},
    {0, 230,  230,  230,  230, 230,  230,  230,  230,  230,  230,  230,230,230,230,230, 230,230,  230,  230,  230,  230,  230,  230,230,230,230,230,230,230,230,230,0},
    {0, 0,  255,  255,  255,  255,  255,255,255,255,255,255,255,255,255,  255, 255,255,  255,  255,  255,  255,  255,  255,255,255,255,255,255,255,255,0,0},
    {0, 0,  0,  240,  240,  240,  240,240,240,240,240,240,240,240,240,  240, 240,240,  240,  240,  240,  240,  240,  240,240,240,240,240,240,240,0,0,0},
    {0, 0,  0,  0,  230,  230,  230,230,230,230,230,230,230,230,230,  230, 230,230,  230,  230,  230,  230,  230,  230,230,230,230,230,230,0,0,0,0},
    {0, 0,  0,  0,  0,  255,  255,255,255,255,255,255,255,255,255,  255, 255,255,  255,  255,  255,  255,  255,  255,255,255,255,255,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  240,240,240,240,240,240,240,240,240,  240, 240,240,  240,  240,  240,  240,  240,  240,240,240,240,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,230,230,230,230,230,230,230,230,  230, 230,230,  230,  230,  230,  230,  230,  230,230,230,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,250,250,250,250,250,250,250,  250, 250,250,  250,  250,  250,  250,  250,  250,250,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,220,220,220,220,220,220,  220, 220,220,  220,  220,  220,  220,  220,  220,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,0,240,240,240,240,240,  240, 240,240,  240,  240,  240,  240,  240,  0,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,0,0,250,250,250,250,  250, 250,250,  250,  250,  250,  250,  0,  0,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,220,220,220,  220, 220,220,  220,  220,  220,  0,  0,  0,0,0,0,0,0,0,0,0,0},
    {0, 0,  0,  0,  0,  0,  0,0,0,0,0,0,0,255,255, 255, 255,255,  255, 255,  0,  0,  0,  0,0,0,0,0,0,0,0,0,0}
};
/*
  static int bSize_10[11][11] = {
    {0,0,0,250,250,250,250,250,0,0,0},
    {0,0,220,220,220,220,220,220,220,0,0},
    {0,255,255,255,255,255,255,255,255,255,0},
    {0,230,230,230,230,230,230,230,230,230,0},
    {240,240,240,240,240,240,240,240,240,240,240},
    {220,220,220,220,220,220,220,220,220,220,220},
    {240,240,240,240,240,240,240,240,240,240,240},
    {0,250,250,250,250,250,250,250,250,250,0},
    {0,220,220,220,220,220,220,220,220,220,0},
    {0,0,250,250,250,250,250,250,250,0,0},
    {0,0,0,255,255,255,255,255,0,0,0}
};
*/

MakeBrushMap::MakeBrushMap(){}
MakeBrushMap::~MakeBrushMap(){}

IplImage * MakeBrushMap::NewBrushMap(int brushSize){
	if(brushSize == 1){
		int size = 2*brushSize+1;
        IplImage * brushMap = cvCreateImage(cvSize(size,size),8,1);
		for(int i = 0; i<size; i++){ 
			for(int j=0;j<size;j++){
				*(brushMap->imageData+brushMap->widthStep*i+j) = bSize_1[i][j];
			}
		}
		return brushMap;
	}
	if(brushSize == 2){
		int size = 2*brushSize+1;
        IplImage * brushMap = cvCreateImage(cvSize(size,size),8,1);
		for(int i = 0; i<size; i++){ 
			for(int j=0;j<size;j++){
				*(brushMap->imageData+brushMap->widthStep*i+j) = bSize_2[i][j];
			}
		}
		return brushMap;
	}
	if(brushSize == 4){
		int size = 2*brushSize+1;
        IplImage * brushMap = cvCreateImage(cvSize(size,size),8,1);
		for(int i = 0; i<size; i++){ 
			for(int j=0;j<size;j++){
				*(brushMap->imageData+brushMap->widthStep*i+j) = bSize_4[i][j];
			}
		}
		return brushMap;
	}
	if(brushSize == 8){
		int size = 2*brushSize+1;
        IplImage * brushMap = cvCreateImage(cvSize(size,size),8,1);
		for(int i = 0; i<size; i++){ 
			for(int j=0;j<size;j++){
				*(brushMap->imageData+brushMap->widthStep*i+j) = bSize_8[i][j];
			}
		}
		return brushMap;
	}
	if(brushSize == 16){
		int size = 2*brushSize+1;
        IplImage * brushMap = cvCreateImage(cvSize(size,size),8,1);
		for(int i = 0; i<size; i++){ 
			for(int j=0;j<size;j++){
				*(brushMap->imageData+brushMap->widthStep*i+j) = bSize_16[i][j];
			}
		}
		return brushMap;
	}
	if(brushSize == 10){
		IplImage * brushMap = cvCreateImage(cvSize(21,21),8,1);
		for(int i = 0; i<21; i++){ 
			for(int j=0;j<21;j++){
                *(brushMap->imageData+brushMap->widthStep*i+j) = bSize_21[i][j];
			}
		}
		return brushMap;
	}

    return NULL;
}
